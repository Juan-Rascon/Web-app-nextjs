{"ast":null,"code":"'use strict';\n\nconsole.log(\"db/models/index.js\");\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst Sequelize = require('sequelize');\n\nconst basename = path.basename(__filename);\nconst env = \"development\" || 'development';\n\nconst config = require(__dirname + '/../config/config.js')[env];\n\nconst db = {};\n/* Custom handler for reading current working directory */\n\nconst models = process.cwd() + '/db/models/' || __dirname;\n\nlet sequelize;\n\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs.readdirSync(__dirname).filter(file => {\n  return file.indexOf('.') !== 0 && file !== basename && file.slice(-3) === '.js';\n}).forEach(file => {\n  const model = require(path.join(__dirname, file))(sequelize, Sequelize.DataTypes);\n\n  db[model.name] = model;\n});\nObject.keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\nmodule.exports = db;","map":{"version":3,"sources":["C:/Users/jrascon/My_Projects/nextjs/db/models/index.js"],"names":["console","log","fs","require","path","Sequelize","basename","__filename","env","config","__dirname","db","models","process","cwd","sequelize","use_env_variable","database","username","password","readdirSync","filter","file","indexOf","slice","forEach","model","join","DataTypes","name","Object","keys","modelName","associate","module","exports"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;;AAEA,MAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAMG,QAAQ,GAAGF,IAAI,CAACE,QAAL,CAAcC,UAAd,CAAjB;AACA,MAAMC,GAAG,GAAG,iBAAwB,aAApC;;AACA,MAAMC,MAAM,GAAGN,OAAO,CAACO,SAAS,GAAG,sBAAb,CAAP,CAA4CF,GAA5C,CAAf;;AACA,MAAMG,EAAE,GAAG,EAAX;AAEA;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,KAAgB,aAAhB,IAAiCJ,SAAhD;;AAGA,IAAIK,SAAJ;;AACA,IAAIN,MAAM,CAACO,gBAAX,EAA6B;AAC3BD,EAAAA,SAAS,GAAG,IAAIV,SAAJ,CAAcQ,OAAO,CAACL,GAAR,CAAYC,MAAM,CAACO,gBAAnB,CAAd,EAAoDP,MAApD,CAAZ;AACD,CAFD,MAEO;AACLM,EAAAA,SAAS,GAAG,IAAIV,SAAJ,CAAcI,MAAM,CAACQ,QAArB,EAA+BR,MAAM,CAACS,QAAtC,EAAgDT,MAAM,CAACU,QAAvD,EAAiEV,MAAjE,CAAZ;AACD;;AAEDP,EAAE,CACCkB,WADH,CACeV,SADf,EAEGW,MAFH,CAEUC,IAAI,IAAI;AACd,SAAQA,IAAI,CAACC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,IAAI,KAAKhB,QAAvC,IAAqDgB,IAAI,CAACE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAA/E;AACD,CAJH,EAKGC,OALH,CAKWH,IAAI,IAAI;AACf,QAAMI,KAAK,GAAGvB,OAAO,CAACC,IAAI,CAACuB,IAAL,CAAUjB,SAAV,EAAqBY,IAArB,CAAD,CAAP,CAAoCP,SAApC,EAA+CV,SAAS,CAACuB,SAAzD,CAAd;;AACAjB,EAAAA,EAAE,CAACe,KAAK,CAACG,IAAP,CAAF,GAAiBH,KAAjB;AACD,CARH;AAUAI,MAAM,CAACC,IAAP,CAAYpB,EAAZ,EAAgBc,OAAhB,CAAwBO,SAAS,IAAI;AACnC,MAAIrB,EAAE,CAACqB,SAAD,CAAF,CAAcC,SAAlB,EAA6B;AAC3BtB,IAAAA,EAAE,CAACqB,SAAD,CAAF,CAAcC,SAAd,CAAwBtB,EAAxB;AACD;AACF,CAJD;AAMAA,EAAE,CAACI,SAAH,GAAeA,SAAf;AACAJ,EAAE,CAACN,SAAH,GAAeA,SAAf;AAEA6B,MAAM,CAACC,OAAP,GAAiBxB,EAAjB","sourcesContent":["'use strict';\n\nconsole.log(\"db/models/index.js\");\n\nconst fs = require('fs');\nconst path = require('path');\nconst Sequelize = require('sequelize');\nconst basename = path.basename(__filename);\nconst env = process.env.NODE_ENV || 'development';\nconst config = require(__dirname + '/../config/config.js')[env];\nconst db = {};\n\n/* Custom handler for reading current working directory */\nconst models = process.cwd() + '/db/models/' || __dirname;\n\n\nlet sequelize;\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs\n  .readdirSync(__dirname)\n  .filter(file => {\n    return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');\n  })\n  .forEach(file => {\n    const model = require(path.join(__dirname, file))(sequelize, Sequelize.DataTypes);\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nmodule.exports = db;\n"]},"metadata":{},"sourceType":"script"}